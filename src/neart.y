
%{
#include <stdio.h>
#include "lexer.h"
// yylex() is generated by flex
int yylex(void);
// we have to define yyerror()
void yyerror(char const * msg);
%}

%union {
    char * text;
    int ws;
}

%locations

// keywords
%token T_UNIT
%token T_VERSION
%token T_FUNC

// numeric
%token T_INT

%token T_ID
%token<ws> T_WS
%token T_NL

%token T_ARROW

// punctuation
%token T_COLON
%token T_EQUAL
%token T_SEMI_COLON

%left '+' '-'
%left '*' '/'
%right '('

%start file

%%

file:
  skip meta skip
  func skip
  ;

meta: 
  T_UNIT mskip T_ID[module]
  ;

func:
  T_FUNC mskip T_ID[name] ows T_COLON params

params:
  ows T_ID ows T_ARROW params
  | ows T_ID
  ;

mskip: ws skip;

skip: 
  | T_WS skip
  | T_NL skip
  ;

// whitespace
ws: T_WS ;

// optional whitespace 
ows:
  | T_WS
  ;

%%

